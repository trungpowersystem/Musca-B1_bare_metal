   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu softvfp
   4              		.arch_extension dsp
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "./Source/main.c"
  19              		.global	pNVIC_IPRBase
  20              		.data
  21              		.align	2
  24              	pNVIC_IPRBase:
  25 0000 00E400E0 		.word	-536812544
  26              		.global	pNVIC_ISERBase
  27              		.align	2
  30              	pNVIC_ISERBase:
  31 0004 00E100E0 		.word	-536813312
  32              		.global	pNVIC_ISPRBase
  33              		.align	2
  36              	pNVIC_ISPRBase:
  37 0008 00E200E0 		.word	-536813056
  38              		.global	pNVIC_STIRBase
  39              		.align	2
  42              	pNVIC_STIRBase:
  43 000c 00EF00E0 		.word	-536809728
  44              		.text
  45              		.align	1
  46              		.global	config_priority_and_enable_interrupt
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	config_priority_and_enable_interrupt:
  52              	.LFB3:
   1:./Source/main.c **** #include <stdio.h>
   2:./Source/main.c **** #include <stdint.h>
   3:./Source/main.c **** 
   4:./Source/main.c **** #define IRQ3NUM 3
   5:./Source/main.c **** #define IRQ8NUM 8
   6:./Source/main.c **** 
   7:./Source/main.c **** uint32_t *pNVIC_IPRBase = (uint32_t *)0xE000E400;
   8:./Source/main.c **** uint32_t *pNVIC_ISERBase = (uint32_t *)0xE000E100;
   9:./Source/main.c **** uint32_t *pNVIC_ISPRBase = (uint32_t *)0xE000E200;
  10:./Source/main.c **** uint32_t *pNVIC_STIRBase = (uint32_t *)0xE000EF00;
  11:./Source/main.c **** 
  12:./Source/main.c **** void config_priority_and_enable_interrupt(uint8_t irqNum, uint8_t irqPriorityValue) {
  53              		.loc 1 12 85
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 32
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58 0000 80B4     		push	{r7}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 4
  61              		.cfi_offset 7, -4
  62 0002 89B0     		sub	sp, sp, #36
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 40
  65 0004 00AF     		add	r7, sp, #0
  66              	.LCFI2:
  67              		.cfi_def_cfa_register 7
  68 0006 0346     		mov	r3, r0
  69 0008 0A46     		mov	r2, r1
  70 000a FB71     		strb	r3, [r7, #7]
  71 000c 1346     		mov	r3, r2
  72 000e BB71     		strb	r3, [r7, #6]
  13:./Source/main.c **** 	//1. find out iprx
  14:./Source/main.c **** 	uint8_t iprx = irqNum / 4;
  73              		.loc 1 14 10
  74 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  75 0012 9B08     		lsrs	r3, r3, #2
  76 0014 FB77     		strb	r3, [r7, #31]
  15:./Source/main.c **** 	uint32_t *ipr =  pNVIC_IPRBase+iprx;
  77              		.loc 1 15 32
  78 0016 1D4B     		ldr	r3, .L2
  79 0018 1A68     		ldr	r2, [r3]
  80 001a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  81 001c 9B00     		lsls	r3, r3, #2
  82              		.loc 1 15 12
  83 001e 1344     		add	r3, r3, r2
  84 0020 BB61     		str	r3, [r7, #24]
  16:./Source/main.c **** 
  17:./Source/main.c **** 	//2. position in iprx
  18:./Source/main.c **** 	uint8_t pos = (irqNum % 4) * 8;
  85              		.loc 1 18 10
  86 0022 FB79     		ldrb	r3, [r7, #7]
  87 0024 03F00303 		and	r3, r3, #3
  88 0028 DBB2     		uxtb	r3, r3
  89 002a DB00     		lsls	r3, r3, #3
  90 002c FB75     		strb	r3, [r7, #23]
  19:./Source/main.c **** 
  20:./Source/main.c **** 	//3. configure the priority
  21:./Source/main.c **** 	*ipr &= ~(0xFF << pos);//clear
  91              		.loc 1 21 2
  92 002e BB69     		ldr	r3, [r7, #24]
  93 0030 1B68     		ldr	r3, [r3]
  94              		.loc 1 21 17
  95 0032 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
  96 0034 FF21     		movs	r1, #255
  97 0036 01FA02F2 		lsl	r2, r1, r2
  98              		.loc 1 21 10
  99 003a D243     		mvns	r2, r2
 100              		.loc 1 21 7
 101 003c 1A40     		ands	r2, r2, r3
 102 003e BB69     		ldr	r3, [r7, #24]
 103 0040 1A60     		str	r2, [r3]
  22:./Source/main.c **** 	*ipr |=  (irqPriorityValue << pos);
 104              		.loc 1 22 2
 105 0042 BB69     		ldr	r3, [r7, #24]
 106 0044 1B68     		ldr	r3, [r3]
 107              		.loc 1 22 29
 108 0046 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 109 0048 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 110 004a 01FA02F2 		lsl	r2, r1, r2
 111              		.loc 1 22 7
 112 004e 1A43     		orrs	r2, r2, r3
 113 0050 BB69     		ldr	r3, [r7, #24]
 114 0052 1A60     		str	r2, [r3]
  23:./Source/main.c **** 
  24:./Source/main.c **** 
  25:./Source/main.c ****     // Find ISER offset
  26:./Source/main.c ****     uint8_t iserOffset = irqNum / 8;
 115              		.loc 1 26 13
 116 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 117 0056 DB08     		lsrs	r3, r3, #3
 118 0058 BB75     		strb	r3, [r7, #22]
  27:./Source/main.c ****     uint32_t *iser = pNVIC_ISERBase + iserOffset;
 119              		.loc 1 27 37
 120 005a 0D4B     		ldr	r3, .L2+4
 121 005c 1A68     		ldr	r2, [r3]
 122 005e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 123 0060 9B00     		lsls	r3, r3, #2
 124              		.loc 1 27 15
 125 0062 1344     		add	r3, r3, r2
 126 0064 3B61     		str	r3, [r7, #16]
  28:./Source/main.c **** 
  29:./Source/main.c ****     // Position in ISERx
  30:./Source/main.c ****     uint8_t iserPos = irqNum % 32;
 127              		.loc 1 30 13
 128 0066 FB79     		ldrb	r3, [r7, #7]
 129 0068 03F01F03 		and	r3, r3, #31
 130 006c FB73     		strb	r3, [r7, #15]
  31:./Source/main.c **** 
  32:./Source/main.c ****     // Enable the interrupt
  33:./Source/main.c ****     *iser |= (1 << iserPos);
 131              		.loc 1 33 5
 132 006e 3B69     		ldr	r3, [r7, #16]
 133 0070 1B68     		ldr	r3, [r3]
 134              		.loc 1 33 17
 135 0072 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 136 0074 0121     		movs	r1, #1
 137 0076 01FA02F2 		lsl	r2, r1, r2
 138              		.loc 1 33 11
 139 007a 1A43     		orrs	r2, r2, r3
 140 007c 3B69     		ldr	r3, [r7, #16]
 141 007e 1A60     		str	r2, [r3]
  34:./Source/main.c **** }
 142              		.loc 1 34 1
 143 0080 00BF     		nop
 144 0082 2437     		adds	r7, r7, #36
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 4
 147 0084 BD46     		mov	sp, r7
 148              	.LCFI4:
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 0086 80BC     		pop	{r7}
 152              	.LCFI5:
 153              		.cfi_restore 7
 154              		.cfi_def_cfa_offset 0
 155 0088 7047     		bx	lr
 156              	.L3:
 157 008a 00BF     		.align	2
 158              	.L2:
 159 008c 00000000 		.word	pNVIC_IPRBase
 160 0090 00000000 		.word	pNVIC_ISERBase
 161              		.cfi_endproc
 162              	.LFE3:
 164              		.align	1
 165              		.global	enable_intterupt_by_sw
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 170              	enable_intterupt_by_sw:
 171              	.LFB4:
  35:./Source/main.c **** 
  36:./Source/main.c **** void enable_intterupt_by_sw(uint8_t irqNum) {
 172              		.loc 1 36 45
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0094 80B4     		push	{r7}
 178              	.LCFI6:
 179              		.cfi_def_cfa_offset 4
 180              		.cfi_offset 7, -4
 181 0096 83B0     		sub	sp, sp, #12
 182              	.LCFI7:
 183              		.cfi_def_cfa_offset 16
 184 0098 00AF     		add	r7, sp, #0
 185              	.LCFI8:
 186              		.cfi_def_cfa_register 7
 187 009a 0346     		mov	r3, r0
 188 009c FB71     		strb	r3, [r7, #7]
  37:./Source/main.c ****     *pNVIC_STIRBase = (irqNum & 0x1FF);
 189              		.loc 1 37 5
 190 009e 044B     		ldr	r3, .L5
 191 00a0 1B68     		ldr	r3, [r3]
 192              		.loc 1 37 31
 193 00a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 194              		.loc 1 37 21
 195 00a4 1A60     		str	r2, [r3]
  38:./Source/main.c **** }
 196              		.loc 1 38 1
 197 00a6 00BF     		nop
 198 00a8 0C37     		adds	r7, r7, #12
 199              	.LCFI9:
 200              		.cfi_def_cfa_offset 4
 201 00aa BD46     		mov	sp, r7
 202              	.LCFI10:
 203              		.cfi_def_cfa_register 13
 204              		@ sp needed
 205 00ac 80BC     		pop	{r7}
 206              	.LCFI11:
 207              		.cfi_restore 7
 208              		.cfi_def_cfa_offset 0
 209 00ae 7047     		bx	lr
 210              	.L6:
 211              		.align	2
 212              	.L5:
 213 00b0 00000000 		.word	pNVIC_STIRBase
 214              		.cfi_endproc
 215              	.LFE4:
 217              		.align	1
 218              		.global	main
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	main:
 224              	.LFB5:
  39:./Source/main.c **** 
  40:./Source/main.c **** int main(void)
  41:./Source/main.c **** {
 225              		.loc 1 41 1
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 00b4 80B5     		push	{r7, lr}
 230              	.LCFI12:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 7, -8
 233              		.cfi_offset 14, -4
 234 00b6 00AF     		add	r7, sp, #0
 235              	.LCFI13:
 236              		.cfi_def_cfa_register 7
  42:./Source/main.c ****     // Hello, Boot sequence is finished. I'm in main function now!!
  43:./Source/main.c **** 
  44:./Source/main.c ****     // Config priority for interrupts
  45:./Source/main.c ****     config_priority_and_enable_interrupt(IRQ3NUM, 0xA);
 237              		.loc 1 45 5
 238 00b8 0A21     		movs	r1, #10
 239 00ba 0320     		movs	r0, #3
 240 00bc FFF7FEFF 		bl	config_priority_and_enable_interrupt
  46:./Source/main.c ****     config_priority_and_enable_interrupt(IRQ8NUM, 0xA);
 241              		.loc 1 46 5
 242 00c0 0A21     		movs	r1, #10
 243 00c2 0820     		movs	r0, #8
 244 00c4 FFF7FEFF 		bl	config_priority_and_enable_interrupt
  47:./Source/main.c **** 
  48:./Source/main.c ****     // Enable the interrupt by software
  49:./Source/main.c ****     enable_intterupt_by_sw(IRQ3NUM);
 245              		.loc 1 49 5
 246 00c8 0320     		movs	r0, #3
 247 00ca FFF7FEFF 		bl	enable_intterupt_by_sw
  50:./Source/main.c ****     enable_intterupt_by_sw(IRQ8NUM);
 248              		.loc 1 50 5
 249 00ce 0820     		movs	r0, #8
 250 00d0 FFF7FEFF 		bl	enable_intterupt_by_sw
  51:./Source/main.c ****     return 0;
 251              		.loc 1 51 12
 252 00d4 0023     		movs	r3, #0
  52:./Source/main.c **** }
 253              		.loc 1 52 1
 254 00d6 1846     		mov	r0, r3
 255 00d8 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE5:
 259              		.align	1
 260              		.global	Interrupt3_Handler
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	Interrupt3_Handler:
 266              	.LFB6:
  53:./Source/main.c **** 
  54:./Source/main.c **** void Interrupt3_Handler(void) {
 267              		.loc 1 54 31
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 1, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272 00da 80B4     		push	{r7}
 273              	.LCFI14:
 274              		.cfi_def_cfa_offset 4
 275              		.cfi_offset 7, -4
 276 00dc 00AF     		add	r7, sp, #0
 277              	.LCFI15:
 278              		.cfi_def_cfa_register 7
  55:./Source/main.c ****     //I'm in interrupt 3 handler
  56:./Source/main.c **** }
 279              		.loc 1 56 1
 280 00de 00BF     		nop
 281 00e0 BD46     		mov	sp, r7
 282              	.LCFI16:
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
 285 00e2 80BC     		pop	{r7}
 286              	.LCFI17:
 287              		.cfi_restore 7
 288              		.cfi_def_cfa_offset 0
 289 00e4 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE6:
 293              		.align	1
 294              		.global	Interrupt8_Handler
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 299              	Interrupt8_Handler:
 300              	.LFB7:
  57:./Source/main.c **** 
  58:./Source/main.c **** void Interrupt8_Handler(void) {
 301              		.loc 1 58 31
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306 00e6 80B4     		push	{r7}
 307              	.LCFI18:
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 7, -4
 310 00e8 00AF     		add	r7, sp, #0
 311              	.LCFI19:
 312              		.cfi_def_cfa_register 7
  59:./Source/main.c ****     //I'm in interrupt 8 handler
  60:./Source/main.c **** }...
 313              		.loc 1 60 1
 314 00ea 00BF     		nop
 315 00ec BD46     		mov	sp, r7
 316              	.LCFI20:
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 00ee 80BC     		pop	{r7}
 320              	.LCFI21:
 321              		.cfi_restore 7
 322              		.cfi_def_cfa_offset 0
 323 00f0 7047     		bx	lr
 324              		.cfi_endproc
 325              	.LFE7:
 327              	.Letext0:
 328              		.file 2 "C:/Program Files (Dev)/13.2 Rel1/arm-none-eabi/include/machine/_default_types.h"
 329              		.file 3 "C:/Program Files (Dev)/13.2 Rel1/arm-none-eabi/include/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:24     .data:00000000 pNVIC_IPRBase
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:21     .data:00000000 $d
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:30     .data:00000004 pNVIC_ISERBase
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:36     .data:00000008 pNVIC_ISPRBase
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:42     .data:0000000c pNVIC_STIRBase
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:45     .text:00000000 $t
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:51     .text:00000000 config_priority_and_enable_interrupt
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:159    .text:0000008c $d
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:164    .text:00000094 $t
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:170    .text:00000094 enable_intterupt_by_sw
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:213    .text:000000b0 $d
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:217    .text:000000b4 $t
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:223    .text:000000b4 main
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:265    .text:000000da Interrupt3_Handler
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\ccIQ9ERw.s:299    .text:000000e6 Interrupt8_Handler

NO UNDEFINED SYMBOLS

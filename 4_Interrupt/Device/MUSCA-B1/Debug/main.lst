   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu softvfp
   4              		.arch_extension dsp
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "./Source/main.c"
  19              		.align	1
  20              		.global	config_priority_and_enable_interrupt
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	config_priority_and_enable_interrupt:
  26              	.LFB3:
   1:./Source/main.c **** #include <stdio.h>
   2:./Source/main.c **** #include <stdint.h>
   3:./Source/main.c **** 
   4:./Source/main.c **** #define IRQ3NUM 3
   5:./Source/main.c **** #define IRQ8NUM 8
   6:./Source/main.c **** 
   7:./Source/main.c **** void config_priority_and_enable_interrupt(uint8_t irqNum, uint8_t irqPriorityValue) {    
  27              		.loc 1 7 85
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 8BB0     		sub	sp, sp, #44
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 0346     		mov	r3, r0
  43 0008 0A46     		mov	r2, r1
  44 000a FB71     		strb	r3, [r7, #7]
  45 000c 1346     		mov	r3, r2
  46 000e BB71     		strb	r3, [r7, #6]
   8:./Source/main.c ****     uint32_t *pNVIC_IPRBase = (uint32_t*)0xE000E400;
  47              		.loc 1 8 15
  48 0010 1F4B     		ldr	r3, .L2
  49 0012 7B62     		str	r3, [r7, #36]
   9:./Source/main.c ****     uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100;
  50              		.loc 1 9 15
  51 0014 1F4B     		ldr	r3, .L2+4
  52 0016 3B62     		str	r3, [r7, #32]
  10:./Source/main.c ****     // Find IPR offset
  11:./Source/main.c ****     uint8_t iprOffset = irqNum / 4;
  53              		.loc 1 11 13
  54 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  55 001a 9B08     		lsrs	r3, r3, #2
  56 001c FB77     		strb	r3, [r7, #31]
  12:./Source/main.c ****     uint32_t *ipr = pNVIC_IPRBase + iprOffset;
  57              		.loc 1 12 35
  58 001e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  59 0020 9B00     		lsls	r3, r3, #2
  60              		.loc 1 12 15
  61 0022 7A6A     		ldr	r2, [r7, #36]
  62 0024 1344     		add	r3, r3, r2
  63 0026 BB61     		str	r3, [r7, #24]
  13:./Source/main.c **** 
  14:./Source/main.c ****     // Position in IPRx
  15:./Source/main.c ****     uint8_t iprPos = (irqNum % 4) * 8;
  64              		.loc 1 15 13
  65 0028 FB79     		ldrb	r3, [r7, #7]
  66 002a 03F00303 		and	r3, r3, #3
  67 002e DBB2     		uxtb	r3, r3
  68 0030 DB00     		lsls	r3, r3, #3
  69 0032 FB75     		strb	r3, [r7, #23]
  16:./Source/main.c **** 
  17:./Source/main.c ****     // Config the priority
  18:./Source/main.c ****     *ipr &= ~(0xff << iprPos);             // Clear old value
  70              		.loc 1 18 5
  71 0034 BB69     		ldr	r3, [r7, #24]
  72 0036 1B68     		ldr	r3, [r3]
  73              		.loc 1 18 20
  74 0038 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
  75 003a FF21     		movs	r1, #255
  76 003c 01FA02F2 		lsl	r2, r1, r2
  77              		.loc 1 18 13
  78 0040 D243     		mvns	r2, r2
  79              		.loc 1 18 10
  80 0042 1A40     		ands	r2, r2, r3
  81 0044 BB69     		ldr	r3, [r7, #24]
  82 0046 1A60     		str	r2, [r3]
  19:./Source/main.c ****     *ipr |= (irqPriorityValue << iprPos);  // Set new value
  83              		.loc 1 19 5
  84 0048 BB69     		ldr	r3, [r7, #24]
  85 004a 1B68     		ldr	r3, [r3]
  86              		.loc 1 19 31
  87 004c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
  88 004e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
  89 0050 01FA02F2 		lsl	r2, r1, r2
  90              		.loc 1 19 10
  91 0054 1A43     		orrs	r2, r2, r3
  92 0056 BB69     		ldr	r3, [r7, #24]
  93 0058 1A60     		str	r2, [r3]
  20:./Source/main.c **** 
  21:./Source/main.c **** 
  22:./Source/main.c ****     // Find ISER offset
  23:./Source/main.c ****     uint8_t iserOffset = irqNum / 32;
  94              		.loc 1 23 13
  95 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  96 005c 5B09     		lsrs	r3, r3, #5
  97 005e BB75     		strb	r3, [r7, #22]
  24:./Source/main.c ****     uint32_t *iser = pNVIC_ISERBase + iserOffset;
  98              		.loc 1 24 37
  99 0060 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 100 0062 9B00     		lsls	r3, r3, #2
 101              		.loc 1 24 15
 102 0064 3A6A     		ldr	r2, [r7, #32]
 103 0066 1344     		add	r3, r3, r2
 104 0068 3B61     		str	r3, [r7, #16]
  25:./Source/main.c **** 
  26:./Source/main.c ****     // Position in ISERx
  27:./Source/main.c ****     uint8_t iserPos = irqNum % 32;
 105              		.loc 1 27 13
 106 006a FB79     		ldrb	r3, [r7, #7]
 107 006c 03F01F03 		and	r3, r3, #31
 108 0070 FB73     		strb	r3, [r7, #15]
  28:./Source/main.c **** 
  29:./Source/main.c ****     // Enable the interrupt
  30:./Source/main.c ****     *iser |= (1 << iserPos);
 109              		.loc 1 30 5
 110 0072 3B69     		ldr	r3, [r7, #16]
 111 0074 1B68     		ldr	r3, [r3]
 112              		.loc 1 30 17
 113 0076 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 114 0078 0121     		movs	r1, #1
 115 007a 01FA02F2 		lsl	r2, r1, r2
 116              		.loc 1 30 11
 117 007e 1A43     		orrs	r2, r2, r3
 118 0080 3B69     		ldr	r3, [r7, #16]
 119 0082 1A60     		str	r2, [r3]
  31:./Source/main.c **** }
 120              		.loc 1 31 1
 121 0084 00BF     		nop
 122 0086 2C37     		adds	r7, r7, #44
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 4
 125 0088 BD46     		mov	sp, r7
 126              	.LCFI4:
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 008a 80BC     		pop	{r7}
 130              	.LCFI5:
 131              		.cfi_restore 7
 132              		.cfi_def_cfa_offset 0
 133 008c 7047     		bx	lr
 134              	.L3:
 135 008e 00BF     		.align	2
 136              	.L2:
 137 0090 00E400E0 		.word	-536812544
 138 0094 00E100E0 		.word	-536813312
 139              		.cfi_endproc
 140              	.LFE3:
 142              		.align	1
 143              		.global	enable_intterupt_by_sw
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	enable_intterupt_by_sw:
 149              	.LFB4:
  32:./Source/main.c **** 
  33:./Source/main.c **** void enable_intterupt_by_sw(uint8_t irqNum) {
 150              		.loc 1 33 45
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0098 80B4     		push	{r7}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 009a 85B0     		sub	sp, sp, #20
 160              	.LCFI7:
 161              		.cfi_def_cfa_offset 24
 162 009c 00AF     		add	r7, sp, #0
 163              	.LCFI8:
 164              		.cfi_def_cfa_register 7
 165 009e 0346     		mov	r3, r0
 166 00a0 FB71     		strb	r3, [r7, #7]
  34:./Source/main.c ****     uint32_t *pNVIC_STIRBase = (uint32_t *)0xE000EF00;
 167              		.loc 1 34 15
 168 00a2 054B     		ldr	r3, .L5
 169 00a4 FB60     		str	r3, [r7, #12]
  35:./Source/main.c ****     *pNVIC_STIRBase = (irqNum & 0x1FF);
 170              		.loc 1 35 31
 171 00a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 172              		.loc 1 35 21
 173 00a8 FB68     		ldr	r3, [r7, #12]
 174 00aa 1A60     		str	r2, [r3]
  36:./Source/main.c **** }
 175              		.loc 1 36 1
 176 00ac 00BF     		nop
 177 00ae 1437     		adds	r7, r7, #20
 178              	.LCFI9:
 179              		.cfi_def_cfa_offset 4
 180 00b0 BD46     		mov	sp, r7
 181              	.LCFI10:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 00b2 80BC     		pop	{r7}
 185              	.LCFI11:
 186              		.cfi_restore 7
 187              		.cfi_def_cfa_offset 0
 188 00b4 7047     		bx	lr
 189              	.L6:
 190 00b6 00BF     		.align	2
 191              	.L5:
 192 00b8 00EF00E0 		.word	-536809728
 193              		.cfi_endproc
 194              	.LFE4:
 196              		.align	1
 197              		.global	main
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	main:
 203              	.LFB5:
  37:./Source/main.c **** 
  38:./Source/main.c **** int main(void)
  39:./Source/main.c **** {
 204              		.loc 1 39 1
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 00bc 80B5     		push	{r7, lr}
 209              	.LCFI12:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 00be 00AF     		add	r7, sp, #0
 214              	.LCFI13:
 215              		.cfi_def_cfa_register 7
  40:./Source/main.c ****     // Hello, Boot sequence is finished. I'm in main function now!!
  41:./Source/main.c **** 
  42:./Source/main.c ****     // Config priority for interrupts
  43:./Source/main.c ****     config_priority_and_enable_interrupt(IRQ3NUM, 0xA);
 216              		.loc 1 43 5
 217 00c0 0A21     		movs	r1, #10
 218 00c2 0320     		movs	r0, #3
 219 00c4 FFF7FEFF 		bl	config_priority_and_enable_interrupt
  44:./Source/main.c ****     config_priority_and_enable_interrupt(IRQ8NUM, 0x9);
 220              		.loc 1 44 5
 221 00c8 0921     		movs	r1, #9
 222 00ca 0820     		movs	r0, #8
 223 00cc FFF7FEFF 		bl	config_priority_and_enable_interrupt
  45:./Source/main.c **** 
  46:./Source/main.c ****     // Enable the interrupt by software
  47:./Source/main.c ****     enable_intterupt_by_sw(IRQ3NUM);
 224              		.loc 1 47 5
 225 00d0 0320     		movs	r0, #3
 226 00d2 FFF7FEFF 		bl	enable_intterupt_by_sw
  48:./Source/main.c ****     return 0;
 227              		.loc 1 48 12
 228 00d6 0023     		movs	r3, #0
  49:./Source/main.c **** }
 229              		.loc 1 49 1
 230 00d8 1846     		mov	r0, r3
 231 00da 80BD     		pop	{r7, pc}
 232              		.cfi_endproc
 233              	.LFE5:
 235              		.align	1
 236              		.global	Interrupt3_Handler
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	Interrupt3_Handler:
 242              	.LFB6:
  50:./Source/main.c **** 
  51:./Source/main.c **** void Interrupt3_Handler(void) {
 243              		.loc 1 51 31
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 8
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 00dc 80B5     		push	{r7, lr}
 248              	.LCFI14:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 00de 82B0     		sub	sp, sp, #8
 253              	.LCFI15:
 254              		.cfi_def_cfa_offset 16
 255 00e0 00AF     		add	r7, sp, #0
 256              	.LCFI16:
 257              		.cfi_def_cfa_register 7
  52:./Source/main.c ****     //I'm in interrupt 3 handler
  53:./Source/main.c ****     enable_intterupt_by_sw(IRQ8NUM);
 258              		.loc 1 53 5
 259 00e2 0820     		movs	r0, #8
 260 00e4 FFF7FEFF 		bl	enable_intterupt_by_sw
  54:./Source/main.c ****     int a = 8;
 261              		.loc 1 54 9
 262 00e8 0823     		movs	r3, #8
 263 00ea 7B60     		str	r3, [r7, #4]
  55:./Source/main.c **** }
 264              		.loc 1 55 1
 265 00ec 00BF     		nop
 266 00ee 0837     		adds	r7, r7, #8
 267              	.LCFI17:
 268              		.cfi_def_cfa_offset 8
 269 00f0 BD46     		mov	sp, r7
 270              	.LCFI18:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 00f2 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE6:
 277              		.align	1
 278              		.global	Interrupt8_Handler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	Interrupt8_Handler:
 284              	.LFB7:
  56:./Source/main.c **** 
  57:./Source/main.c **** void Interrupt8_Handler(void) {
 285              		.loc 1 57 31
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290 00f4 80B4     		push	{r7}
 291              	.LCFI19:
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 7, -4
 294 00f6 00AF     		add	r7, sp, #0
 295              	.LCFI20:
 296              		.cfi_def_cfa_register 7
  58:./Source/main.c ****     //I'm in interrupt 8 handler
  59:./Source/main.c **** }...
 297              		.loc 1 59 1
 298 00f8 00BF     		nop
 299 00fa BD46     		mov	sp, r7
 300              	.LCFI21:
 301              		.cfi_def_cfa_register 13
 302              		@ sp needed
 303 00fc 80BC     		pop	{r7}
 304              	.LCFI22:
 305              		.cfi_restore 7
 306              		.cfi_def_cfa_offset 0
 307 00fe 7047     		bx	lr
 308              		.cfi_endproc
 309              	.LFE7:
 311              	.Letext0:
 312              		.file 2 "C:/Program Files (Dev)/13.2 Rel1/arm-none-eabi/include/machine/_default_types.h"
 313              		.file 3 "C:/Program Files (Dev)/13.2 Rel1/arm-none-eabi/include/sys/_stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:19     .text:00000000 $t
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:25     .text:00000000 config_priority_and_enable_interrupt
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:137    .text:00000090 $d
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:142    .text:00000098 $t
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:148    .text:00000098 enable_intterupt_by_sw
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:192    .text:000000b8 $d
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:196    .text:000000bc $t
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:202    .text:000000bc main
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:241    .text:000000dc Interrupt3_Handler
C:\Users\TRUNG~1.NGU\AppData\Local\Temp\cc5tHy5V.s:283    .text:000000f4 Interrupt8_Handler

NO UNDEFINED SYMBOLS
